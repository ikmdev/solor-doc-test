<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">
    <title>Summary of Findings - Managing the Best Practice for Open-Source Communities</title>
    <section>
        <title>The Current State of Healthcare Knowledge Management</title>
        <para>Over the last decade, billion dollars have been poured into achieving interoperability
            in the healthcare industry. Patients, providers, and healthcare agencies have
            collectively identified the need for a more harmonized, integrated health system to
            solve the challenges surrounding clinical data, such as its interpretability and
            accuracy. The current structure of the healthcare ecosystem continues to fail in
            providing adequate structures conducive to collaborative, community-based solutioning. A
            review in 2021 of American Hospital Association Information Technology survey data found
            that by 2018, 98.3% of hospitals have adopted Electronic Health Record (EHR) systems –
            the primary creators and curators of digital health data. Yet, across the board, health
            systems have struggled to move beyond simple adoption and implement advanced use in
            patient engagement and clinical data analytics. [1] Notably, critical access hospitals
            in rural areas were less likely to demonstrate advanced usage with an expanding deficit
            to their counterparts in clinical data analytics since 2015, leading to gaps in patient
            access of quality healthcare. </para>
        <para>Today, many hospital systems have the goal of improving data interoperability within
            and beyond their system. To be truly useful, clinical data must move through numerous
            systems without loss of meaning. In an idealized situation, data transfers would
            complete a single round-trip with total integrity intact. In reality, only 22% - 68% of
            data integrity is successfully preserved through its transfer journey. [2] A patient’s
            record may correctly showcase the correct numerical result from a test but could lose
            the context and meaning surrounding the test. Ever-increasing system complexity and
            resulting low-quality data, however, has ultimately impacted the quality of care across
            the healthcare ecosystem, such as inefficiencies of redundant testing and procedures
            being ordered, expanding the time frame of care for patients. Additionally, the very
            systems that have been designed to integrate EHRs into the health space can create
            barriers to interoperability through closed, proprietary systems. Multiple, sometimes
            competing, encoding standards have been developed over the last few decades to address
            the varying formats clinical data embodies. Some clinical standardization forms,
            however, are very broad in its acceptance criteria resulting in large amounts of
            variation between encodement while others are too restrictive, limiting the situations
            in which they can be utilized. As a result, the need for a consistent form to map
            standards to and between other standards in creation of a common model is required for
            improvement of interoperability within the healthcare landscape where clinical decisions
            can be captured regardless of what point they originate in patient care. </para>
        <section><title>Defining a Key Issue: Restrictive Healthcare Licenses</title>
        <para>The root cause of insufficiencies within Health IT is not limited solely to a group of
            vendors or organizations but is rather a foundational issue that permeates throughout
            the ecosystem. Restrictive licenses are just one of these causes and are used in varying
            forms across the landscape. However, this spurs unintended consequences of limiting
            harmonization. Instead of just treating the symptomatic results of poor data quality,
            attention should also be spent understanding the reasons beneath recurring pain points.
            Various standards have been developed to compete and improve upon the limitations of
            other encoding standards. As multiple organizations, such as by clinicians,
            laboratorians, and providers integrate patient data together, the need of various
            standards to transfer openly and completely becomes even more apparent. A piecemeal
            approach has occurred where different standards carry licensing restrictions to protect
            against modifications and extensions of their code for proprietary oversight, creating
            confusion on how and to what extent standards can be shared. Healthcare data standard
            organizations seek to protect their software and standards, by design, from unauthorized
            subversion, modification, and duplication of their work through their licensing
            agreements. These restrictions often allow for direct oversight of derivative works from
            the issuing body as well as monetization from commercial usage of their product. In a
            highly profitable landscape, restrictive licenses allow organizations to prevent their
            work from being duplicated by rivals and seek longevity in the marketplace. Proprietary
            licensing leads to siloed operations by providers and developers, as well as higher
            implementation costs, limiting stronger adoption. These restrictive licenses can pose
            challenges on the ease of transfers within and between systems and are creators of
            insufficiencies within Health IT. For example, issuing standards do not always fit into
            the exact context practitioners need and require adaption into localized knowledge.
            Licenses often prevent against local knowledge being shared between system and require a
            mapping to an existing code for meaningful data usage. Data integrity can be impacted as
            there may be no exact match that encompasses all the information from local codes and be
            transferred incompletely. Tools to aid in standardization may be restricted due to
            modification and extension restrictions within proprietary licenses. </para>
        <para><emphasis>The current restrictive and proprietary nature of licensing within the
                healthcare ecosystem significantly hinders interoperability. To achieve lossless
                data exchanges between systems, the Health IT community must consider movement
                towards open-source software and open-source licensing models.</emphasis> Gaps
            created by varying rates of adoption and implementation requires various avenues of
            collaboration within the IKM community to address these issues within the entire Health
            IT ecosystem. </para>
        </section>
    </section>
    <section>
        <title>The Case for a More Open Future in Healthcare</title>
        <para>The rapid expansion of technology and connectivity has created ill-defined guidelines
            on management and ownership of data. As a result, researchers and users find themselves
            navigating different and competing guidance on utilizing and adapting software for their
            own needs. One of the main movements on expanding access and resolving conflict between
            proprietary systems is that of granting wide, sweeping rights through the open-source
            movement. Notably, open-source software like Mozilla Firefox has enabled web access
            utilized by millions every year. Additionally, open software systems, like Apache 2.0,
            have had broad adoptive use because it allows software to be used for any purpose,
            modified or otherwise. </para>
        <para>The following sections aim to define the open-source software and licensing more
            clearly: </para>
        <para><emphasis role="bold">Open-Source Software (OSS) </emphasis></para>
        <para>There are two branches of software utilized by individuals and companies: open-source
            software and proprietary, or closed-source, software. At the most theoretical level, in
            an open-source environment, the source code is freely available and accessible to its
            end-users regardless of their intent, be it for personal or commercial use. The term
            “free” is under debate regarding the cost of accessing the software and under contention
            on if the source code can be monetized for access. Here, free is used as in libre, or
            freedom, and not necessarily in cost. The discussion of free licensing extends to
            freedoms guaranteed through the licensing for the software, and not in the context of
            the monetary cost to access the software. Many software systems are considered to be
            open-source but are not free from implementation cost. There are third-party costs
            associated with integrating and maintaining open-source. </para>
        <para>The Free Software Foundation (FSF) defines free as in: </para>
        <itemizedlist>
            <listitem>
                <para>The freedom to run the program as you wish, for any purpose (freedom
                    0).</para>
            </listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem>
                <para>The freedom to study how the program works and alter it so it computes as you
                    wish (freedom 1). Access to the source code is a precondition for this.</para>
            </listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem>
                <para>The freedom to redistribute copies so you can help others (freedom 2).</para>
            </listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem>
                <para>The freedom to distribute copies of your modified versions to others (freedom
                    3). [3] </para>
            </listitem>
        </itemizedlist>
        <para>This is controlled in the forms of licenses and is discussed further below. Closed
            source systems protect the source code and modifications cannot be made where the
            end-user can only execute the code within the confines of the original intent of the
            creator. </para>
        <para>In open-source, no one group is solely responsible for the software because it allows
            for a peer-to-peer production of codes and documentation. A governing body may exist to
            oversee and maintain the software as long as no one group holds special rights to the
            software. Due to the decentralization of software, errors and bugs are found much
            quicker because the code is utilized in a variety of contexts and stretched much
            farther. Instead of a single development team being tasked with identifying and
            repairing errors as they are found, users can also be developers and contribute to
            identifying errors much faster. As a result, open-source software utilizes a high degree
            of modularity where it can be adaptive and flexible to the diverse needs of its users. </para>
        <para><emphasis>In its purest form, open-source software lowers the burden of buy-in
                required by consumers where they can build on the work of others through a
                collaborative community without reinvention</emphasis>. Lower implementation cost
            and maintenance of open-source software helps expand the possible consumer base. It is
            not restricted to those who can devote the time and resources to stand up the required
            infrastructure and knowledge base. Instead, end-users can guide and shape the software
            to their niche rather than be limited to the specific intended usage at its inception.
            The creation of open-source leads to a symbiotic ecosystem where software is more robust
            and applicable than its closed counterparts. </para>
        <para>Many software systems today utilize qualities of open-source software but lie in a
            gray area where they maintain proprietary techniques. These limits are imposed by their
            licensing models through their end-user agreements. </para>
        <section><title>Real World Example: General Data Protection Regulation (GDPR) and Data
            Privacy in Healthcare</title>
        <para>The General Data Protection Regulation (GDPR) is an European Union (EU) privacy and
            security law that was put into effect May 25, 2018. This EU law imposes obligations onto
            organizations anywhere in the world if they target or collect data related to EU
            citizens or residents. The law outlines seven protection and accountability principles,
            listed below [4]:</para>
        <para>
            <orderedlist>
                <listitem>
                    <para>Lawfulness, fairness and transparency</para>
                </listitem>
                <listitem>
                    <para>Purpose limitation</para>
                </listitem>
                <listitem>
                    <para>Data minimization</para>
                </listitem>
                <listitem>
                    <para>Accuracy</para>
                </listitem>
                <listitem>
                    <para>Storage limitation</para>
                </listitem>
                <listitem>
                    <para>Integrity and confidentiality</para>
                </listitem>
                <listitem>
                    <para>Accountability</para>
                </listitem>
            </orderedlist>
        </para>
        <para>The GDPR has influenced data management and privacy practices in the healthcare sector
            by compelling healthcare organizations to adopt stricter data protection measures and
            transparency in data handling. According to GDPR law, health data is defined as personal
            data related to the physical or mental health of a natural person, including the
            provision of health care services, which reveal information about their health. This
            health data also includes genetic and biometric data. [5]</para>
        <para>Healthcare organizations must adapt to these strict new regulations, and are charged
            with managing patient consent, data portability, and the consequences of non-compliance,
            which could be fines up to €22M+. For U.S. healthcare organization this means complying
            with GDPR as well as Health Insurance Portability and Accountability Act (HIPPA), which
            is a separate level of consent and information the provider has to ensure the patient
            receives. Additionally, GDPR places the burden of proof of consent on the provider, and
            they must implement an audit trail for electronic consents. This example demonstrates
            how regulatory changes are shaping the future of data management in healthcare and
            aligns with the need for clarity in data management guidelines.</para>
        <para><emphasis role="bold">Open-Source Licensing (OSL) </emphasis></para>
        <para>The implementation of open-source software is managed in-hand through open-source
            licensing (OSL). The license of the software sets out the guidelines on the usage and
            implementation of the specific version of software being used. The license acts as a
            copyright agreement where organizations and creators can control the distribution,
            duplication, and modification of their work. </para>
        <para>There are many different types of licenses, as seen in Figure 2.1 below, and are often
            created to be intentionally vague to apply to a multitude of situations and preserve the
            rights of the licensor: </para><figure xml:id="RestrictionsImposed">
                <title>Restrictions Imposed by License Type</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="../images/2.2.4%20Restrctions%20posed.svg" align="center" scale="60"/>
                    </imageobject>
                </mediaobject>
            </figure>
        
        <para><emphasis role="bold">Public-Domain</emphasis>: Public domain refers to any
            information, software, or intellectual property that carries no restrictions in regard
            to copyright law. It is free to use by any individual. No one group can exercise control
            over it. In a software setting, source code must be provided. </para>
        <para><emphasis role="bold">Permissive License</emphasis>: Also known as an open-source
            license. This type of license carries minimal restriction over adaption, modification,
            and distribution of intellectual property of organizations. An issuing body may impose
            some restrictions, such as the monetization, but it does not exert special rights to
            derivative works. In a software setting, source code must be provided. </para>
        <para><emphasis role="bold">Protective License</emphasis>: This type of license, also called
            a copyleft license, grants rights on modification and redistribution but also requires
            derivative works to include and grants the same rights of the original license. Similar
            to public domain and permissive licenses, source code must also be accessible. </para>
        <para><emphasis role="bold">Noncommercial</emphasis>: The license only grants special rights
            to be used in a noncommercial setting where an external entity may exercise proprietary
            control or monetization of the applicable intellectual property. This can also decrease
            the cost of access, especially for organizations for academic or research purposes. </para>
        <para><emphasis role="bold">Proprietary</emphasis>: The most traditional form of licensing
            where no rights must be granted to other entities. There are varying significant
            restrictions on modification and distribution, where it is often disallowed completely. </para>
        <para><emphasis role="bold">Trade Secret</emphasis>: Often left unpublished, information is
            not open to the public or non-entity members in any form. It is the most restrictive,
            private type of licensing. In software, no source code is available. </para>
        <para>Open-source licensing is seen as a method to resolve the dispute between unauthorized
            copying and distribution of content as well as the copyright laws that have been created
            to protect individual and businesses of their own work. [6] Instead of users finding
            ways to circumvent barriers of access to content, the license serves as a pathway on how
            to freely access and modify software to the needs of users while protecting the
            proprietary interests of the originator. In this context, discussion surrounding the
            term of “free” applies here as well as in open-source software. Many software systems
            are considered to be open-source and utilize an open-source license but are not free in
            cost to the licensee. </para>
        <para>Open-source licensing agreements give access to software that may have been prevented
            under copyright law. These types of licenses enable use regardless of intent and the
            ability to modify, adapt, and extend software with minimal restrictions. The license
            establishes rules of the road and codifies best practices to enable adoptability and
            ease of use for both the initial user and the broader downstream community. For example,
            many licenses require modifications to be disclosed and thoroughly documented for
            third-party individuals to avoid endorsements and confusion regarding what has been
            published directly from organizations themselves. </para>
        <para>In practice, many licenses are not considered open-source due to certain conditions
            like distribution, access, and modification being prohibited. It is important to note
            that the quality of software and source code is not inherently affected by the structure
            of the license. A balance, however, is required ensuring that the licenses do not cause
            unintended consequences surrounding the proper development and evolution of the code by
            the user. [7] </para>
            </section>
    </section>
    <section>
        <title>Examining License Agreements in Action</title>
        <para>For many organizations, it is unrealistic to fully adopt all parts of open-source
            software and licensing. Organization’s structure licenses dependent on the intended
            usage of software and codes and aim to embody qualities of open-source. For example, an
            individual may be able to access software and source code for no-cost or at a greatly
            reduced cost if it is meant for an academic usage. The moment where the user would like
            to adapt, transmute, and distribute software, they will often need a different license
            such as a commercial one. Rather than being purely open or closed source, in
            application, many organizations lie somewhere in the middle where commercialization of
            parts of their software support the ongoing research, development, and maintenance of
            itself. Organizations argue that the monetization of their software also allows them to
            create detailed guidance for implementation as well as more direct support to its
            customers while also protecting the proprietary source and implementation of its
            product.
            <?oxy_comment_start author="rgeorgacopoulos" timestamp="20240103T123833-0500" comment="Comment from Hashir: add some examples of these downstream effects "?>This
            can contribute to unintended downstream effects that require a multistep approach to
            solving.<?oxy_comment_end?> Although there are understandable reasons for organizations
            to license some or all of their software, limiting it's use inhibits contributors who
            bring diverse and valuable perspectives and solutions. Every part of an organization's
            work in relation to healthcare ultimately has an effect on patient welfare, quality, and
            care. Ideas that are locked behind licenses cannot be part of the larger solution to
            interoperability. Advocacy towards open-source, permissive licenses is one aspect to
            solutioning. </para>
        <para>Users are often left to determine their obligations to different licenses, especially
            when wanting to combine related software. How do researchers, laboratorians, and health
            providers navigate the intentional vague complexity of licenses when attempting to solve
            interoperability? Instead, they experience restrictions and lock-in from standards that
            act as a hindrance to solving patient problems. Two related but distinguishable
            implication of licenses are [8]: </para>
        <para>1. the explicit terms and rights maintained on content derived from software, and </para>
        <para>2. the incompatibility of licensing in competing and related standards. </para>
        <para>The current siloed approach of licensing models prevents interoperability within
            Health IT and results in lower quality data with unattended, downstream patient effects. </para>
        <section><title>Real-world Example: The Linux Kernel and Android Operating
            System</title>
            <para>The Linux Kernel General Public License (GPL) is a real-world example
            of an open-source licensing agreement that can be referenced and learned from as we
            continue our IKM efforts. In the Linux Kernel contribution model, contributors need to
            complete the following process to submit and merge code:</para>
        <para>
            <orderedlist>
                <listitem>
                    <para><emphasis role="bold">Patch Development</emphasis>– External contributors
                        create a new patch branch to author and finalize their code. The patch is
                        then developed and details the differences between the main branch and the
                        newly authored branch.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Review</emphasis>– Once the new code is finalized in
                        its separate branch, it is submitted into a standardized and well-documented
                        code review process. The Module Maintainer Team then conducts an initial,
                        manual review of the code.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Testing</emphasis>– If the Module Maintainer Team
                        deems that the patch passes the initial review process, it is entered into
                        the Continuous Integration/Continuous Delivery (CI/CD) system that performs
                        acceptance, integration, functionality, scaling, and performance
                        tests.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Merging</emphasis>– If the patch passes all tests,
                        the Module Maintainer Team notifies the contributor that their patch has
                        been entered into the Merge Process queue before being merged into the main
                        branch. However, if a patch fails a test, the Module Maintainer Team
                        notifies the contributor that their patch has been rejected or needs
                        revisions before it can be resubmitted.</para>
                </listitem>
            </orderedlist>
        </para>
        <para>Some defining characteristics of the Linux Kernel contribution model include:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="bold">Mailing List-Based Review</emphasis>– Patch
                        submissions are submitted to a centralized Module Maintainer Team then
                        initiates the review process. This supports transparent discussion and
                        visibility among the developer and contributor community but provides a less
                        structured process that can be confusing for newer contributors.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Maintainer-Centric Approach</emphasis>– The Module
                        Maintainer Team have an incredibly important role reviewing and approving
                        all submitted branches. While this ensures a standardized and consistent
                        process, it heavily relies on the maintainers.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Scalability</emphasis>– The Linux Kernel
                        contribution model remains relatively unchanged as the size of the project
                        increases, supporting effective scaling and continual content
                        development.</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>The Linux Kernel GPL allows any stakeholder to use, modify, or distribute its code
            freely. Android is a large stakeholder that participates in the Linux Kernel GPL and
            uses Linux Kernel as the base and foundation for the Android operating system (OS).
            Android then employs its own, more permissive, open-source licensing agreement through
            Apache License Version 2.0 as part of the Android Open-Source Project (AOSP). The AOSP
            licensing agreement allows manufacturers to build custom versions of the operative
            system, which facilitates the use of the Android OS in healthcare technology. The
            prevalence of the Android OS, or a modified version through the AOSP, throughout
            healthcare highlights the impact that licensing has on the development, adoption, and
            implementation of code, software, and products in the healthcare industry and the
            importance of having a well-curated licensing agreement. [9-10]</para>
        </section>
        <section>
        <title>Case-Study: LOINC® and SNOMED International Licensing
            Agreements</title>
        <para>Logical Observation Identifiers Names and Code® (LOINC®) and Systemized Nomenclature
            of Medicine – Clinical Terms® (SNOMED CT®) are two of the most widely used health data
            standards in the U.S. for clinical terminology. LOINC® is overseen by the Regenstrief
            Institute and utilizes a global team for maintaining, developing, and updating guidance
            on its terminology with the vision of promoting open terminology standards across every
            clinical information system [11]. LOINC® advocates for open terminology standards but
            does not issue an open-source license. Instead, all users are required to hold a license
            to utilize LOINC®, with some licenses requiring a fee to implement and utilize the full
            functionality of LOINC®. Similarly, SNOMED CT® is overseen by SNOMED International with
            the intent to support, maintain, and implement SNOMED CT®. All users are required to
            accept SNOMED International’s licensing agreement through an end-user agreement and are
            issued a proprietary license with some requiring a fee depending on the usage and intent
            of the license. Both organizations issue guidance on new and existing codes to reflect
            current events and needs at least biannually by engaging in a rigorous feedback function
            where users can engage. SNOMED International is moving towards more timely standard
            updates, not limited to the biannual timeline, especially for rapid developing arenas,
            such as COVID-19. </para>
        </section>
        <section>
            <title>Where Licenses Break Interoperability: Redistribution and Modification</title>
            <para>The Regenstrief institute highlights guiding principles such as openness and
                agility in improving and widening LOINC®’s implementation. Regenstrief does not
                allow the distribution of modified codes under their license. Often, health systems
                will adapt an existing code to better represent their localized environment where
                there is no one-for-one match. Users must create their own solution limited to the
                licensing agreement, engage in a feedback process with the Regenstrief Institute,
                and wait until a new code is issued directly from Regenstrief to be able to share
                between systems. </para>
            <para>SNOMED International does not allow for derivative work or extensions to be
                created if it has not already been issued a Namespace Identifier. Modifications are
                disallowed under their SNOMED CT® Affiliate license and must go through a feedback
                process where users can petition for added codes in a future release cycle. This is
                to avoid confusion and ambiguity of SNOMED International codes and prevent against
                inconsistencies between systems. [12] As a result, there will be many forms of
                similarly derived codes in a localized format. </para>
            <para>This waiting cycle creates gaps that directly impact the quality and
                interoperability of data. While organizations petition to have new codes created,
                they must continue to standardize their codes before their data is transferred to
                another system. During this step, data can be lost during the transfer from a local
                code to a standard LOINC® or SNOMED CT® code. Doctors may lose the much-needed
                context surrounding patient care, leading to redundancy in additional ordered tests
                and referrals. Moreover, the issuance of new codes does not circumvent the usage of
                localized knowledge. New codes can be used in place of local knowledge, but it can
                also be further adapted into knowledge for the specific needs of practitioners. This
                does not solve the transfer errors that can occur when local codes are standardized.
            </para>
        </section>
    </section>
    <section>
        <title>Putting a More Open Healthcare Ecosystem Into Practice</title>
        <para>The IKM community has been longing to address proper standardization encodement of
            healthcare information across ever changing system. Many avenues of collaboration would
            help solve the data quality and interoperability issue that the healthcare IT ecosystem
            is facing. The meaningful semantic difference within terminologies requires preservation
            to prevent against varying clinical interpretations and treatment. An <emphasis
                role="bold">IKM</emphasis>
            <emphasis role="bold">approach</emphasis> can act as a method to standardize clinical
            statements and terminologies by providing abstraction and elimination of unnecessary
            complexity. Instead of a local code being incorrectly mapped to a standard code, the IKM
            platform would provide guidance on the most applicable codes and reduce data loss by
            ensuring a consistent, reproducible format allowing for the same test to be represented
            the same way, every time. Proper achievement requires collaboration across government
            regulatory bodies, public health laboratories, private healthcare systems, and
            In-Vitro-Diagnostic (IVD) device manufacturers. This also extends to the bodies that
            oversee terminology standards and the licensing agreements governing them. </para>
        <para>For successful implementation of an integrated knowledge ecosystem, licensing bodies
            should implement components of open-source licensing, specifically on modification and
            distribution of copyrighted standards. Currently, the process that exists on how
            licenses work together in common spaces and the subsequent requirements are ambiguous.
            Would the implementation of a third-party software trigger licensing restrictions and
            inhibit the willingness of organizations to adopt them? Is the usage of an IKM platform
            by an organization to reconcile local codes considered to be an extension of a modified
            code, disallowed under the existing licensing structure? Some licenses consider any work
            to be referential to be a “derivative” without fully specifying the scope of the
            reference. This is seen, for example, in the form of the GNU's Not Unix (GNU) General
            Public License (GPL) and in references to GPL licensed libraries. [13] The navigation of
            differing licenses and determining the varying responsibilities imposed by them can be a
            costly, time-consuming burden that often acts as a barrier for meaningful progress. It
            can quickly become a convoluted process that inhibits success of implementation,
            unintended by the licensor and their vision of interoperability as seen in LOINC®.
            Licenses must walk a tight line on preventing extension of standards, thereby slowing
            down the evolution of these standards, and allowing full extensions that can subvert the
            standard in and of itself, creating confusion where modifications look to be
            endorsements by the issuing body. [5]</para>
        <para>In practice, strong open-source licenses can encourage the development and evolution
            of standards without subversion of standards through guardrails on community
            contributions. Instead of a few chosen contributors, solutions can be developed openly
            with the collaboration of multiple stakeholders where solutioning becomes more robust
            and agile to the various needs of its users. Reasonable guidelines, such as extensive
            documentation procedures especially in extensions, enhances the trust within open-source
            solutions and allow for the benefits of open-source without allowing an “anything goes”
            mentality where confusion ensues. Additionally, open-source licenses can continue to
            protect against impersonations and false endorsements through their agreements. </para>
        <section>
            <title>Open-Source Licensing Within a Knowledge
                Architecture</title>
        <para>A Knowledge Architecture is a framework for clinical information that is organized
            into distinct layers such that each higher layer relies upon artifacts from the lower
            layer. It aims to define a standardized form of clinical statements and harmonize
            existing terminologies together into a single system. </para>
        <para>A knowledge architecture intended for use in the current Health IT ecosystem is listed
            below: </para>
        <figure xml:id="LayersWithinKnowledgeArchitecture">
            <title>Layers Within Knowledge Architecture</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="../images/New%20PASTF.svg" align="center" scale="10"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>Rather than a broad transformation of existing licenses in a purely open-source model,
            not all components of software and standard licensing require a pivot away from
            proprietary oversight to lead to successful implementation of an IKM ecosystem. The
            commercial usage of aspects of licenses allows for ongoing support and maintenance of
            software and standards. The move towards a permissive license does not require a seismic
            shift in organization structure or its ability monetize its commercial license,
            especially for organizations already promoting open-standards. <emphasis>Allowing for
                open-licensing encourages improvements of terminology and standards by ancillary
                bodies and creates a more robust, flexible system that can further adapt into the
                varying needs of organizations. </emphasis></para>
        <para>Data harmonization improves when foundational layers of Knowledge Architecture are
            integrated into common, collective sources of data. If utilized correctly under a
            Knowledge Architecture, a single-data journey can be completed with integrity intact
            every time. Permissive licensing throughout the foundational architecture, terminology
            knowledge, and statement model layers removes barriers imposed on modifications and
            extensions and instead aids in the creation of common understandings of knowledge. The
            Terminology Knowledge layer within Knowledge Architecture oversees the structure of
            medical terminologies, such as the language and semantic hierarchy within data. It is in
            this layer where the IKM platform arbitrates the valid codes and expressions to be used
            in higher layers. Currently, the usage of terminology standards like SNOMED CT®, LOINC®,
            and additional standards pose questions regarding compatibility due to modification and
            extensions limitations. The complexity widens when further standards based on other
            standards are integrated further in the terminology layer, like the Laboratory
            Interoperability Data Repository (LIDR) and Tinkar. The loss of data often occurs in
            this layer and breaks the functionality of standards where local codes are mapped to the
            incorrect standard codes. The IKM platform aims to solve this issue by harmonizing
            standards but cannot be successfully implemented unless the underlying licenses allow an
            IKM platform to reconcile variances. In the Statement Model, the artifacts as defined
            below are reused and demonstrate how the data elements should be packaged into clinical
            statements through clinical formatting, such as Health Level 7 Fast Healthcare
            Interoperability Resources (HL7 FHIR) or Clinical Informational Modeling Initiative
            (CIMI). The shift towards a permissive license in regard to terminologies and standards
            improves the compatibility of how different terminologies work together and thereby is
            integral to the functionality of higher layers and interoperability overall. </para>
        </section>
    </section>
    <section>
        <title>Conclusion</title>
        <para>Achievement of interoperability within healthcare systems requires a multi-faceted
            approach through the extensive collaboration of various stakeholders involved. In its
            current form many licenses serve as unintended barriers to interoperability where
            downstream patient harm can occur. The increasing interconnectedness of industries and
            partners requires a reevaluation of existing licensing structures that impose barriers
            often antithetical to goals set out by issuing organizations themselves. For solutions
            like an Integrated Knowledge Platform to succeed, licensing must be structured to
            support and encourage growth of ancillary bodies. The adoption of open-source licensing
            encourages diversity of thought where stronger software often results to the benefit of
            organizations. Advocacy towards open-source licensing must also occur internally by
            managing teams. Together, common solutioning reduces siloed company operations, moving
            one step closer to harmonization across the Health IT landscape. </para>
    </section>
    <section>
        <title>Appendix</title> 
        <para>
            <informaltable>
                <tgroup cols="3">
                    <colspec colnum="1" colname="col1"/>
                    <colspec colnum="2" colname="col2"/>
                    <colspec colnum="3" colname="col3"/>
                    <tbody>
                        <row>
                            <entry/>
                            <entry><emphasis role="italic">LOINC®</emphasis></entry>
                            <entry><emphasis role="italic">SNOMED CT®</emphasis></entry>
                        </row>
                        <row>
                            <entry><emphasis role="italic">What is the type of license
                                    utilized?</emphasis></entry>
                            <entry>
                                <para>LOINC® utilizes proprietary licenses throughout. It is not
                                    considered to be open-source, especially under the commercial
                                    agreement. </para>
                                <para> </para>
                                <para>Notably, all users are required to hold a license to utilize
                                    LOINC®.</para>
                            </entry>
                            <entry>
                                <para>SNOMED CT® is not considered open-source and instead issues
                                    proprietary licenses. SNOMED CT® has a variety of licenses
                                    dependent on the usage and intent, with some requiring a fee. </para>
                                <para> </para>
                                <para>SNOMED CT® requires all users to have a license. </para>
                                <para> </para>
                            </entry>
                        </row>
                        <row>
                            <entry><emphasis role="italic">Who owns and maintains the
                                    standard?</emphasis></entry>
                            <entry>
                                <para> </para>
                                <para>Regenstrief Institute oversees LOINC® and utilizes a global
                                    team to contribute to LOINC®. They oversee and are responsible
                                    for the maintenance of LOINC®, as well as issuing up-to-date
                                    guidance. </para>
                                <para> </para>
                            </entry>
                            <entry>SNOMED International oversees SNOMED CT® and is supported in part
                                by the International Health Terminology Standards Development
                                Organization (IHTSDO) to maintain and implement SNOMED CT®.
                                Additional licensing for non-IHTSDO countries is available. </entry>
                        </row>
                        <row>
                            <entry><emphasis role="italic">What is the cost associated with
                                    usage?</emphasis></entry>
                            <entry>LOINC® is not completely free to use and is specified by its
                                intent of the license holder. Nonprofit, academic, and individual
                                licenses are available under a free license; however, a commercial
                                license requires a fee to implement. There may be third-party costs
                                associated with implementing and supporting LOINC® external to the
                                licensing. </entry>
                            <entry>
                                <para>SNOMED International, which includes SNOMED CT®, has fees
                                    associated with its licensee depending on the usage by the
                                    holder. For non-commercial use, such as by academic bodies,
                                    there is no fee for SNOMED International licensing, but are
                                    limited on redistribution. </para>
                                <para> </para>
                                <para>For commercial use, however, like adding into existing
                                    healthcare systems for usage, then a fee is incurred for the
                                    license. There are multiple licenses to best support the varying
                                    needs of users. There are also fees associated with non-IHTSDO
                                    member countries.</para>
                                <para> </para>
                            </entry>
                        </row>
                        <row>
                            <entry><emphasis role="italic">What does redistribution look
                                    like?</emphasis></entry>
                            <entry>LOINC® allows for distribution of their original code without
                                restriction as long as their original license is included in it.
                                Limitations exist for modified codes and cannot be redistributed
                                without the consent of LOINC® copyright holders. If the distribution
                                is intended for commercial usage, a commercial license may be
                                required with associated fees. </entry>
                            <entry>SNOMED International redistribution is only allowed under a
                                commercial license as part of their license and cannot be done as a
                                standalone extension. Additionally, the licensee must still protect
                                the proprietary requirements as listed in their license to
                                distribute. Redistribution cannot be done in non-commercial
                                licenses. Modifications of SNOMED International codes are allowed
                                under certain distribution licenses but must maintain compatibility
                                with the original SNOMED CT® as well as be clearly documented and
                                labeled. </entry>
                        </row>
                        <row>
                            <entry><emphasis role="italic">How often do releases occur? Who
                                    contributes to what is updated?</emphasis></entry>
                            <entry>Releases occur twice a year, typically every 6 months. LOINC®
                                utilizes a feedback function where users can request new codes as
                                well as gathering feedback from stakeholders, regardless of license
                                status. They additionally test these codes and update guidance on
                                existing codes to reflect current events (ex. COVID-19). </entry>
                            <entry>
                                <para>Releases occur in January and July every year and contain
                                    updated guidance for their codes to reflect current events,
                                    similar to LOINC®. </para>
                                <para> </para>
                                <para> </para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </para>
    </section>
    <section>
        <title>References</title>
        <orderedlist>
            <listitem>
                <para>Apathy, N. C., Holmgren, A. J., and Adler-Milstein, J. (2021, September). A
                    decade post-HITECH: Critical access hospitals have electronic health records but
                    struggle to keep up with other advanced functions. Journal of the American
                    Medical Informatics Association, 1947-19554. Retrieved from
                    https://doi.org/10.1093/jamia/ocab102 </para>
            </listitem>
            <listitem>
                <para>Bernstam, E. V., Warner, J. L., Krauss, J. C., Ambinder, E., Rubinstein, W.
                    S., Komastsoulis, G., and Miller, R. S. (2022, May). Quantitating and assessing
                    interoperability between electronic health records. Journal of the American
                    Medical Informatics Association, 29(5), 753-760.
                    doi:https://doi.org/10.1093/jamia/ocab289 </para>
            </listitem>
            <listitem>
                <para>Free Software Foundation. (n.d.). What is Free Software? Retrieved from GNU
                    Operating System: https://www.gnu.org/philosophy/free-sw.en.html#copyleft
                </para>
            </listitem>
            <listitem>
                <para>Wolford B. What is GDPR, the EU’s new data protection law? [Internet].
                    GDPR.eu. 2018. Available from:
                    https://gdpr.eu/what-is-gdpr/#:~:text=The%20General%20Data%20Protection%20Regulation%20%28GDPR%29%20is%20the</para>
            </listitem>
            <listitem>
                <para>GDPR and healthcare: Understanding health data and consent [Internet].
                    www.pega.com. 2018. Available from:
                    https://www.pega.com/insights/articles/gdpr-and-healthcare-understanding-health-data-and-consent</para>
            </listitem>
            <listitem>
                <para>Wilbanks, J. (2008). Public domain, copyright licenses and the freedom to
                    integrate science. Journal of Science Communication, 7(2).
                    doi:https://doi.org/10.22323/2.07020304 </para>
            </listitem>
            <listitem>
                <para>Reynolds, C. J., and Wyatt, J. C. (2011, February). Open Source, Open
                    Standards, and Health Care Information Systems. Journal of Medical Internet
                    Research. doi:https://doi.org/10.2196/jmir.1521 </para>
            </listitem>
            <listitem>
                <para>Hosking, R., and Gahegan, M. (2013). The Effects of Licensing on Open Data:
                    Computing a Measure of Health for Our Scholarly Record. International Semantic
                    Web Conference, 432-439. doi:https://doi.org/10.1007/978-3-642-41338-4_28
                </para>
            </listitem>
            <listitem>
                <para>Wikiwand - Android (operating system) [Internet]. Wikiwand. [cited 2024 Jan
                    17]. Available from:
                    https://www.wikiwand.com/en/Android_(operating_system)</para>
            </listitem>
            <listitem>
                <para>Licenses [Internet]. Android Open Source Project. Available from:
                    https://source.android.com/docs/setup/about/licenses</para>
            </listitem>
            <listitem>
                <para>Mission, Vision, and Principles for Open Terminology Development. (n.d.).
                    Retrieved from LOINC®: https://loinc.org/principles/ </para>
            </listitem>
            <listitem>
                <para>SNOMED CT Affiliate License Agreement. (n.d.). Retrieved from SNOMED CT®:
                    https://www.snomed.org/_files/ugd/900274_689013e9e0c74d23892abe9caee02612.pdf</para>
            </listitem>
            <listitem>
                <para>Scheibner, J. (2017). What price freedom (of software)? A guide for Australian
                    legal practitioners on open source licensing. Retrieved from Australian Lawyers
                    Alliance:
                    http://classic.austlii.edu.au/au/journals/PrecedentAULA/2017/23.html#fnB3
                </para>
            </listitem>
        </orderedlist>
    </section>
    </chapter>